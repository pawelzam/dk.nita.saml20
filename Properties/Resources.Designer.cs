//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Saml2.Properties {
    using System;
    
    
    /// <summary>
    /// A strongly-typed resource class, for looking up localized strings, formatting them, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilderEx class via the ResXFileCodeGeneratorEx custom tool.
    // To add or remove a member, edit your .ResX file then rerun the ResXFileCodeGeneratorEx custom tool or rebuild your VS.NET project.
    // Copyright (c) Dmytro Kryvko 2006-2015 (http://dmytro.kryvko.googlepages.com/)
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("DMKSoftware.CodeGenerators.Tools.StronglyTypedResourceBuilderEx", "2.7.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
#if !SILVERLIGHT && !PocketPC && !Smartphone && !WindowsCE
    [global::System.Reflection.ObfuscationAttribute(Exclude=true, ApplyToMembers=true)]
#endif
    [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Naming", "CA1724:TypeNamesShouldNotMatchNamespaces")]
    public partial class Resources {
        
        private static global::System.Resources.ResourceManager _resourceManager;
        
        private static object _internalSyncObject;
        
        private static global::System.Globalization.CultureInfo _resourceCulture;
        
        /// <summary>
        /// Initializes a Resources object.
        /// </summary>
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        public Resources() {
        }
        
        /// <summary>
        /// Thread safe lock object used by this class.
        /// </summary>
        public static object InternalSyncObject {
            get {
                if (object.ReferenceEquals(_internalSyncObject, null)) {
                    global::System.Threading.Interlocked.CompareExchange(ref _internalSyncObject, new object(), null);
                }
                return _internalSyncObject;
            }
        }
        
        /// <summary>
        /// Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(_resourceManager, null)) {
                    global::System.Threading.Monitor.Enter(InternalSyncObject);
                    try {
                        if (object.ReferenceEquals(_resourceManager, null)) {
                            global::System.Threading.Interlocked.Exchange(ref _resourceManager, new global::System.Resources.ResourceManager("dk.nita.saml20.Properties.Resources", typeof(Resources).Assembly));
                        }
                    }
                    finally {
                        global::System.Threading.Monitor.Exit(InternalSyncObject);
                    }
                }
                return _resourceManager;
            }
        }
        
        /// <summary>
        /// Overrides the current thread's CurrentUICulture property for all
        /// resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return _resourceCulture;
            }
            set {
                _resourceCulture = value;
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Access Denied'.
        /// </summary>
        public static string AccessDenied {
            get {
                return ResourceManager.GetString(ResourceNames.AccessDenied, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'ACCESS DENIED: The value for a required authorization rule grant was missing or empty.  User={0}; Service={1}; Method={2}; CapabilityValue={3}; AzRule={4}; Argument={5}'.
        /// </summary>
        public static string AccessDeniedAzRuleGrantMissing {
            get {
                return ResourceManager.GetString(ResourceNames.AccessDeniedAzRuleGrantMissing, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'ACCESS DENIED: Evaluation of an authorization rule returned &apos;false&apos;. User={0}; Service={1}; Method={2}; Capability/AzRule={3}'.
        /// </summary>
        public static string AccessDeniedAzRuleResultFalse {
            get {
                return ResourceManager.GetString(ResourceNames.AccessDeniedAzRuleResultFalse, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'ACCESS DENIED: There are no required capabilities defined for the service {0} and default access for everyone is disallowed'.
        /// </summary>
        public static string AccessDeniedEveryoneAccessDisallowed {
            get {
                return ResourceManager.GetString(ResourceNames.AccessDeniedEveryoneAccessDisallowed, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'ACCESS DENIED: The caller does not have a required capability. User={0}; Service={1}; Method={2}; Capability={3}'.
        /// </summary>
        public static string AccessDeniedRequiredCapabilityMissing {
            get {
                return ResourceManager.GetString(ResourceNames.AccessDeniedRequiredCapabilityMissing, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'ACCESS DENIED: Expected tokenversion {2} actual tokenversion {3}. 
        ///User={0}
        ///AppID={1}'.
        /// </summary>
        public static string AccessDeniedTokenVersionNotAllowed {
            get {
                return ResourceManager.GetString(ResourceNames.AccessDeniedTokenVersionNotAllowed, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'AUDIT: Service method invoked. User={0}; Service={1}; Method={2}'.
        /// </summary>
        public static string AccessGranted {
            get {
                return ResourceManager.GetString(ResourceNames.AccessGranted, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Assertion is no longer valid.'.
        /// </summary>
        public static string AssertionExpired {
            get {
                return ResourceManager.GetString(ResourceNames.AssertionExpired, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'A SAML token must have an AssertionID.'.
        /// </summary>
        public static string AssertionIDAttributeMissing {
            get {
                return ResourceManager.GetString(ResourceNames.AssertionIDAttributeMissing, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Saml assertion does not have the required assurance level. Assurance level was: {0} and configured minimum assurance level was: {1}.'.
        /// </summary>
        public static string AssuranceLevelTooLow {
            get {
                return ResourceManager.GetString(ResourceNames.AssuranceLevelTooLow, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Xml error: {0} attribute is required on {1}: {2} element.'.
        /// </summary>
        public static string AttributeMissing {
            get {
                return ResourceManager.GetString(ResourceNames.AttributeMissing, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Xml error: attribute value not specified for SAML attribute {0}: {1}.'.
        /// </summary>
        public static string AttributeXmlError {
            get {
                return ResourceManager.GetString(ResourceNames.AttributeXmlError, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'A SAML token must specify an authentication instant.'.
        /// </summary>
        public static string AuthenticationInstantMissing {
            get {
                return ResourceManager.GetString(ResourceNames.AuthenticationInstantMissing, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'A SAML token must have an authentication method.'.
        /// </summary>
        public static string AuthenticationMethodMissing {
            get {
                return ResourceManager.GetString(ResourceNames.AuthenticationMethodMissing, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'The request for a SAML token contained a base token of an unsupported type.'.
        /// </summary>
        public static string BaseTokenNotSupported {
            get {
                return ResourceManager.GetString(ResourceNames.BaseTokenNotSupported, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'An errror occurred. No known binding has been registered for this endpoint.'.
        /// </summary>
        public static string BindingError {
            get {
                return ResourceManager.GetString(ResourceNames.BindingError, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Found more than one certificate matching {0}.'.
        /// </summary>
        public static string CertificateMoreThanOneFound {
            get {
                return ResourceManager.GetString(ResourceNames.CertificateMoreThanOneFound, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Certificate {0} was not found.'.
        /// </summary>
        public static string CertificateNotFound {
            get {
                return ResourceManager.GetString(ResourceNames.CertificateNotFound, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Please choose the identity provider of your choice from the list below:'.
        /// </summary>
        public static string ChooseDesc {
            get {
                return ResourceManager.GetString(ResourceNames.ChooseDesc, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Choose Identity Provider'.
        /// </summary>
        public static string ChooseIDP {
            get {
                return ResourceManager.GetString(ResourceNames.ChooseIDP, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'A Saml token must contain conditions.'.
        /// </summary>
        public static string ConditionsMissing {
            get {
                return ResourceManager.GetString(ResourceNames.ConditionsMissing, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Configuration element {0} under configuration element {1} missing in config file'.
        /// </summary>
        public static string ConfigurationElementMissing {
            get {
                return ResourceManager.GetString(ResourceNames.ConfigurationElementMissing, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'There was an error loading the WseSaml configuration section.'.
        /// </summary>
        public static string ConfigurationSectionError {
            get {
                return ResourceManager.GetString(ResourceNames.ConfigurationSectionError, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Configuration section {0} missing in config file'.
        /// </summary>
        public static string ConfigurationSectionMissing {
            get {
                return ResourceManager.GetString(ResourceNames.ConfigurationSectionMissing, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'The static members of the WebServicesConfiguration class cannot be accessed, because the WseSaml configuration section handler has not finished initializing.'.
        /// </summary>
        public static string ConfigurationSectionNotInitialized {
            get {
                return ResourceManager.GetString(ResourceNames.ConfigurationSectionNotInitialized, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Unable to create the policy cache directory. Ensure that the directory {0} exists and that the service account has full access to it'.
        /// </summary>
        public static string CreatePolicyCacheDirError {
            get {
                return ResourceManager.GetString(ResourceNames.CreatePolicyCacheDirError, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'A custom URI must be specified in the &apos;issuerCustomAppliesTo&apos; attribute when the &apos;issuerAppliesToType&apos; is set to &apos;custom&apos;. '.
        /// </summary>
        public static string CustomAppliesToMissing {
            get {
                return ResourceManager.GetString(ResourceNames.CustomAppliesToMissing, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'A custom URI must be specified in the &apos;issuerCustomAppliesTo&apos; attribute when the &apos;issuerAppliesToType&apos; is set to &apos;custom&apos;. '.
        /// </summary>
        public static string CustomAppliesToMissing1 {
            get {
                return ResourceManager.GetString(ResourceNames.CustomAppliesToMissing1, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'The RequestSecurityToken message must be signed with a token which supports Data Encryption since the SamlTokenService uses that signing token to encrypt the key.'.
        /// </summary>
        public static string DataEncryptionTokenSupport {
            get {
                return ResourceManager.GetString(ResourceNames.DataEncryptionTokenSupport, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'body{
        ///	font-family: Verdana;
        ///	color: 555555;
        ///	font-size: 10pt;
        ///	text-align: center;	
        ///}
        ///
        ///#mainPanel{
        ///	width: 70%;
        ///}
        ///
        ///#headerPanel{
        ///	width: 100%;
        ///	margin: 0px 0px 0px 0px;
        ///	padding: 10px 10px 10px 10px;
        ///	background-color: #CCCCCC;
        ///	border-top: thin solid #B50000;
        ///	border-left: thin solid #B50000;
        ///	border-right: thin solid #B50000;
        ///	font-size: 14px;
        ///	font-weight: bold;
        ///}
        ///
        ///#bodyPanel{
        ///	width: 100%;
        ///	margin: 0px 0px 0px 0px;
        ///	padding: 10px 10px 10px 10px;
        ///	border-bottom: thin solid #B5 [rest of string was truncated]&quot;;'.
        /// </summary>
        public static string DefaultStyle {
            get {
                return ResourceManager.GetString(ResourceNames.DefaultStyle, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'More than one EncryptedKeyToken is present in the security header of the incoming message, but only one was expected.'.
        /// </summary>
        public static string DuplicateEncryptedKeyToken {
            get {
                return ResourceManager.GetString(ResourceNames.DuplicateEncryptedKeyToken, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'More than one SamlFederationToken is present in the security header of the incoming message, but only one was expected.'.
        /// </summary>
        public static string DuplicateSamlFederationToken {
            get {
                return ResourceManager.GetString(ResourceNames.DuplicateSamlFederationToken, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'More than one SamlToken is present in the security header of the incoming message, but only one was expected.'.
        /// </summary>
        public static string DuplicateSamlToken {
            get {
                return ResourceManager.GetString(ResourceNames.DuplicateSamlToken, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Xml error: a SAML token must contain a {0}:{1} element as a child of {2}: {3}.'.
        /// </summary>
        public static string ElementMissing {
            get {
                return ResourceManager.GetString(ResourceNames.ElementMissing, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Xml error: the children of the {0}: {1} element are not in proper order.'.
        /// </summary>
        public static string ElementsOutOfOrder {
            get {
                return ResourceManager.GetString(ResourceNames.ElementsOutOfOrder, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'EncryptedKeyToken is expected in the active SAML federation scenario, but not present in the incoming security header'.
        /// </summary>
        public static string EncryptedKeyTokenMissing {
            get {
                return ResourceManager.GetString(ResourceNames.EncryptedKeyTokenMissing, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'The STS could not find an encryption token in the configuration for the scope specified by the client'.
        /// </summary>
        public static string EncryptionTokenForScopeMissing {
            get {
                return ResourceManager.GetString(ResourceNames.EncryptionTokenForScopeMissing, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Error!'.
        /// </summary>
        public static string Error {
            get {
                return ResourceManager.GetString(ResourceNames.Error, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'An error has occurred. '.
        /// </summary>
        public static string GenericError {
            get {
                return ResourceManager.GetString(ResourceNames.GenericError, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'IdP specified in LogoutRequest {0} does not match IdP stored in session {1}.'.
        /// </summary>
        public static string IdPMismatchBetweenRequestAndSession {
            get {
                return ResourceManager.GetString(ResourceNames.IdPMismatchBetweenRequestAndSession, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'The attribute &apos;{0}&apos; is missing, incorretly formatted, or contains an usupported value.'.
        /// </summary>
        public static string IllFormedConfigAttribute {
            get {
                return ResourceManager.GetString(ResourceNames.IllFormedConfigAttribute, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'The attribute &apos;{0}&apos; is missing, incorretly formatted, or contains an usupported value.'.
        /// </summary>
        public static string IllFormedConfigAttribute1 {
            get {
                return ResourceManager.GetString(ResourceNames.IllFormedConfigAttribute1, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'The input is not a valid {0} element because this attribute is unrecognized: {1}.'.
        /// </summary>
        public static string InvalidAttributeParent {
            get {
                return ResourceManager.GetString(ResourceNames.InvalidAttributeParent, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'The specified authentication instant is in the future.'.
        /// </summary>
        public static string InvalidAuthenticationInstant {
            get {
                return ResourceManager.GetString(ResourceNames.InvalidAuthenticationInstant, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Type {0} does not derive from {1}'.
        /// </summary>
        public static string InvalidBaseType {
            get {
                return ResourceManager.GetString(ResourceNames.InvalidBaseType, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'A child element was encountered in the following element and was not expected to be there:&lt;{0}&gt;.'.
        /// </summary>
        public static string InvalidChildElement {
            get {
                return ResourceManager.GetString(ResourceNames.InvalidChildElement, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'The input was not a valid {0} element because it contains more than one {1} child element.'.
        /// </summary>
        public static string InvalidElementChildsQuantity {
            get {
                return ResourceManager.GetString(ResourceNames.InvalidElementChildsQuantity, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Element must be of type: {0}: {1}.'.
        /// </summary>
        public static string InvalidElementType {
            get {
                return ResourceManager.GetString(ResourceNames.InvalidElementType, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'The Uri is not a valid format, please open the policy file and change the &apos;issuer&apos; attribute.'.
        /// </summary>
        public static string InvalidIssuerUri {
            get {
                return ResourceManager.GetString(ResourceNames.InvalidIssuerUri, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'The Uri is not a valid format, please open the policy file and change the &apos;issuer&apos; attribute.'.
        /// </summary>
        public static string InvalidIssuerUri1 {
            get {
                return ResourceManager.GetString(ResourceNames.InvalidIssuerUri1, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'The effective date (NotBefore) for the SAML token cannot be greater than the actual date'.
        /// </summary>
        public static string InvalidNotBeforeValue {
            get {
                return ResourceManager.GetString(ResourceNames.InvalidNotBeforeValue, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'The SAML token has expired. The expiration date (NotOnOrAfter) for the SAML token is lower than the actual date'.
        /// </summary>
        public static string InvalidNotOnOrAfterValue {
            get {
                return ResourceManager.GetString(ResourceNames.InvalidNotOnOrAfterValue, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'The message does not contain a valid request.'.
        /// </summary>
        public static string InvalidRequest {
            get {
                return ResourceManager.GetString(ResourceNames.InvalidRequest, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'The built-in SamlTokenServiceHandler can only handle RequestSecurityToken messages, not RequestSecurityTokenResponse messages.'.
        /// </summary>
        public static string InvalidRequestSecurityTokenMessage {
            get {
                return ResourceManager.GetString(ResourceNames.InvalidRequestSecurityTokenMessage, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Response does not contain a SAML Token.'.
        /// </summary>
        public static string InvalidResponseSamlToken {
            get {
                return ResourceManager.GetString(ResourceNames.InvalidResponseSamlToken, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Response does not contain a valid token.'.
        /// </summary>
        public static string InvalidResponseToken {
            get {
                return ResourceManager.GetString(ResourceNames.InvalidResponseToken, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Response does not contain a valid token.'.
        /// </summary>
        public static string InvalidResponseToken1 {
            get {
                return ResourceManager.GetString(ResourceNames.InvalidResponseToken1, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Parameter &apos;{0}&apos; is not a SAML {1} element.'.
        /// </summary>
        public static string InvalidSamlElement {
            get {
                return ResourceManager.GetString(ResourceNames.InvalidSamlElement, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Result must be of type SecurityTokenServiceAsyncResult.'.
        /// </summary>
        public static string InvalidSecurityTokenServiceAsyncResult {
            get {
                return ResourceManager.GetString(ResourceNames.InvalidSecurityTokenServiceAsyncResult, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Result must be of type SecurityTokenServiceAsyncResult.'.
        /// </summary>
        public static string InvalidSecurityTokenServiceAsyncResult1 {
            get {
                return ResourceManager.GetString(ResourceNames.InvalidSecurityTokenServiceAsyncResult1, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Result must be of type SecurityTokenServiceAsyncResult.'.
        /// </summary>
        public static string InvalidSecurityTokenServiceAsyncResult2 {
            get {
                return ResourceManager.GetString(ResourceNames.InvalidSecurityTokenServiceAsyncResult2, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'The securityToken argument was not of type {0}.'.
        /// </summary>
        public static string InvalidSecurityTokenType {
            get {
                return ResourceManager.GetString(ResourceNames.InvalidSecurityTokenType, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Invalid SAML token lifespan specified.'.
        /// </summary>
        public static string InvalidTimespan {
            get {
                return ResourceManager.GetString(ResourceNames.InvalidTimespan, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'The security token manager configured for the SamlToken token type must expose a non-null TokenCache property.'.
        /// </summary>
        public static string InvalidTokenCacheProperty {
            get {
                return ResourceManager.GetString(ResourceNames.InvalidTokenCacheProperty, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'The built-in SamlTokenServiceHandler can only handle requests for tokens with the following TokenType: {0}.'.
        /// </summary>
        public static string InvalidTokenType {
            get {
                return ResourceManager.GetString(ResourceNames.InvalidTokenType, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'The uri {0} is not an wellformed absolute uri'.
        /// </summary>
        public static string InvalidWellformedAbsoluteUriString {
            get {
                return ResourceManager.GetString(ResourceNames.InvalidWellformedAbsoluteUriString, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'A SAML token must specify an issuer.'.
        /// </summary>
        public static string IssuerMissing {
            get {
                return ResourceManager.GetString(ResourceNames.IssuerMissing, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'A policy must be specified for communicating with the Security Token Service.'.
        /// </summary>
        public static string IssuerPolicyMissing {
            get {
                return ResourceManager.GetString(ResourceNames.IssuerPolicyMissing, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'A policy must be specified for communicating with the Security Token Service.'.
        /// </summary>
        public static string IssuerPolicyMissing1 {
            get {
                return ResourceManager.GetString(ResourceNames.IssuerPolicyMissing1, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'No issuer SPN is defined for assertion {0}'.
        /// </summary>
        public static string IssuerSPNMissing {
            get {
                return ResourceManager.GetString(ResourceNames.IssuerSPNMissing, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Saml token cannot be retreived on behalf of the calling Kerberos user since caller cannot be impersonated'.
        /// </summary>
        public static string KerberosWebUserCannotBeImpersonated {
            get {
                return ResourceManager.GetString(ResourceNames.KerberosWebUserCannotBeImpersonated, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'The specified metadata directory &quot;{0}&quot; could not be located.'.
        /// </summary>
        public static string MetadataLocationNotFound {
            get {
                return ResourceManager.GetString(ResourceNames.MetadataLocationNotFound, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Metadata not found for idp endpoint with id {0}'.
        /// </summary>
        public static string MetadataNotFound {
            get {
                return ResourceManager.GetString(ResourceNames.MetadataNotFound, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Xml error: attribute {0} of element {1}: {2} must have a value.'.
        /// </summary>
        public static string NoAttributeValuePresent {
            get {
                return ResourceManager.GetString(ResourceNames.NoAttributeValuePresent, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Xml error: element {0}: {1} must have a value.'.
        /// </summary>
        public static string NoElementValuePresent {
            get {
                return ResourceManager.GetString(ResourceNames.NoElementValuePresent, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Xml error: a SAML token may contain no more then one {0}: {1} element as a child of {2}.'.
        /// </summary>
        public static string NoMoreThanOneXmlElement {
            get {
                return ResourceManager.GetString(ResourceNames.NoMoreThanOneXmlElement, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Assertion with OneTimeUse condition detected more than once.'.
        /// </summary>
        public static string OneTimeUseReplay {
            get {
                return ResourceManager.GetString(ResourceNames.OneTimeUseReplay, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Unable to instantiate policy extension of type {0}.'.
        /// </summary>
        public static string PolicyExtensionInstanciateError {
            get {
                return ResourceManager.GetString(ResourceNames.PolicyExtensionInstanciateError, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Policy extension with name &apos;{0}&apos; is not registered.'.
        /// </summary>
        public static string PolicyExtensionNotRegistered {
            get {
                return ResourceManager.GetString(ResourceNames.PolicyExtensionNotRegistered, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Authorization policy for the method could not be found. User={0}; Service={1}; Action={2}'.
        /// </summary>
        public static string PolicyNotFound {
            get {
                return ResourceManager.GetString(ResourceNames.PolicyNotFound, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'No authorization policy found for protected service {0} at token version {1}'.
        /// </summary>
        public static string PolicyNotFoundForService {
            get {
                return ResourceManager.GetString(ResourceNames.PolicyNotFoundForService, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'The {0} configuration element&apos;s value must be positive. The value found was {1}.'.
        /// </summary>
        public static string PositiveValue {
            get {
                return ResourceManager.GetString(ResourceNames.PositiveValue, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Proof key was calculated from entropy using unsupported algorithm.'.
        /// </summary>
        public static string ProfKeyUnsupportedAlgorithm {
            get {
                return ResourceManager.GetString(ResourceNames.ProfKeyUnsupportedAlgorithm, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Proof key was calculated from entropy using unsupported algorithm.'.
        /// </summary>
        public static string ProfKeyUnsupportedAlgorithm1 {
            get {
                return ResourceManager.GetString(ResourceNames.ProfKeyUnsupportedAlgorithm1, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Proof key was calculated from entropy using unsupported algorithm.'.
        /// </summary>
        public static string ProfKeyUnsupportedAlgorithm2 {
            get {
                return ResourceManager.GetString(ResourceNames.ProfKeyUnsupportedAlgorithm2, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'The property {0} is readonly '.
        /// </summary>
        public static string ReadOnlyProperty {
            get {
                return ResourceManager.GetString(ResourceNames.ReadOnlyProperty, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Protection requirements not satisfied'.
        /// </summary>
        public static string RequerimentsNotSatisfied {
            get {
                return ResourceManager.GetString(ResourceNames.RequerimentsNotSatisfied, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Protection requirements not satisfied'.
        /// </summary>
        public static string RequerimentsNotSatisfied1 {
            get {
                return ResourceManager.GetString(ResourceNames.RequerimentsNotSatisfied1, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'The RST entropy has to be at least 16 bytes long.'.
        /// </summary>
        public static string RequestEntropyInvalidLength {
            get {
                return ResourceManager.GetString(ResourceNames.RequestEntropyInvalidLength, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'The RST entropy has to be at least 16 bytes long.'.
        /// </summary>
        public static string RequestEntropyInvalidLength1 {
            get {
                return ResourceManager.GetString(ResourceNames.RequestEntropyInvalidLength1, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'The RST entropy has to be at least 16 bytes long.'.
        /// </summary>
        public static string RequestEntropyInvalidLength2 {
            get {
                return ResourceManager.GetString(ResourceNames.RequestEntropyInvalidLength2, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Failed to retrieve RequestSecurityToken.'.
        /// </summary>
        public static string RequestSecurityTokenRetrieveError {
            get {
                return ResourceManager.GetString(ResourceNames.RequestSecurityTokenRetrieveError, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Failed to retrieve RequestSecurityToken.'.
        /// </summary>
        public static string RequestSecurityTokenRetrieveError1 {
            get {
                return ResourceManager.GetString(ResourceNames.RequestSecurityTokenRetrieveError1, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Failed to retrieve RequestSecurityToken.'.
        /// </summary>
        public static string RequestSecurityTokenRetrieveError2 {
            get {
                return ResourceManager.GetString(ResourceNames.RequestSecurityTokenRetrieveError2, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Fail to retrieve RequestSoapContext'.
        /// </summary>
        public static string RequestSoapContextRetrieveError {
            get {
                return ResourceManager.GetString(ResourceNames.RequestSoapContextRetrieveError, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Response does not contain a proof key.'.
        /// </summary>
        public static string ResponseProfKeyMissing {
            get {
                return ResourceManager.GetString(ResourceNames.ResponseProfKeyMissing, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Response does not contain a proof key.'.
        /// </summary>
        public static string ResponseProfKeyMissing1 {
            get {
                return ResourceManager.GetString(ResourceNames.ResponseProfKeyMissing1, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Response does not contain a proof key.'.
        /// </summary>
        public static string ResponseProfKeyMissing2 {
            get {
                return ResourceManager.GetString(ResourceNames.ResponseProfKeyMissing2, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'A SamlNameIdentifier must have a format.'.
        /// </summary>
        public static string SamlNameIdentifierInvalidFormat {
            get {
                return ResourceManager.GetString(ResourceNames.SamlNameIdentifierInvalidFormat, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'A SamlNameIdentifier must have a value.'.
        /// </summary>
        public static string SamlNameIdentifierInvalidValue {
            get {
                return ResourceManager.GetString(ResourceNames.SamlNameIdentifierInvalidValue, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'SamlSubject does not contain a key.'.
        /// </summary>
        public static string SamlSubjectKeyMissing {
            get {
                return ResourceManager.GetString(ResourceNames.SamlSubjectKeyMissing, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'A SamlSubject must specify a confirmation method.'.
        /// </summary>
        public static string SamlSubjectMissingConfirmationMethod {
            get {
                return ResourceManager.GetString(ResourceNames.SamlSubjectMissingConfirmationMethod, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'A SamlSubject must contain a SamlNameIdentifier.'.
        /// </summary>
        public static string SamlSubjectNameMissing {
            get {
                return ResourceManager.GetString(ResourceNames.SamlSubjectNameMissing, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'The SAML token has expired.'.
        /// </summary>
        public static string SamlTokenExpired {
            get {
                return ResourceManager.GetString(ResourceNames.SamlTokenExpired, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'SamlToken is expected but not present in the security header of the incoming message.'.
        /// </summary>
        public static string SamlTokenMissing {
            get {
                return ResourceManager.GetString(ResourceNames.SamlTokenMissing, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'An appropriate token for authorization could not be found.'.
        /// </summary>
        public static string SamlTokenNotFound {
            get {
                return ResourceManager.GetString(ResourceNames.SamlTokenNotFound, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Security requirements are not satisfied because the security header is not present in the incoming message.'.
        /// </summary>
        public static string SecurityHeadersMissing {
            get {
                return ResourceManager.GetString(ResourceNames.SecurityHeadersMissing, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'A server token is required for SamlToken Service. This token is used to sign outgoing RequestSecurityTokenResponse messages and is configured by the &lt;serverToken&gt; configuration element.'.
        /// </summary>
        public static string ServerTokenMissing {
            get {
                return ResourceManager.GetString(ResourceNames.ServerTokenMissing, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Created Service Input Filter for {0}'.
        /// </summary>
        public static string ServiceInputFilterCreated {
            get {
                return ResourceManager.GetString(ResourceNames.ServiceInputFilterCreated, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to ' is a child element of Safewhere.SAML20Federation.'.
        /// </summary>
        public static string ServiceProviderNotSet {
            get {
                return ResourceManager.GetString(ResourceNames.ServiceProviderNotSet, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'The signature of the incoming message is invalid.'.
        /// </summary>
        public static string SignatureInvalid {
            get {
                return ResourceManager.GetString(ResourceNames.SignatureInvalid, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'There is no signature present in the incoming message.'.
        /// </summary>
        public static string SignatureNotPresent {
            get {
                return ResourceManager.GetString(ResourceNames.SignatureNotPresent, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'A Saml token must contain a subject.'.
        /// </summary>
        public static string SubjectMissing {
            get {
                return ResourceManager.GetString(ResourceNames.SubjectMissing, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Xml error: the &lt;{0}&gt;&lt;{2}&gt; and the &lt;{1}&gt;&lt;{2}&gt; elements must be the same.'.
        /// </summary>
        public static string SubjectXmlError {
            get {
                return ResourceManager.GetString(ResourceNames.SubjectXmlError, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'The base token does not have an identity.'.
        /// </summary>
        public static string TokenIdentityMissing {
            get {
                return ResourceManager.GetString(ResourceNames.TokenIdentityMissing, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'The SamlTokenBuilder has not been initialized to construct a token.'.
        /// </summary>
        public static string TokenNotConstructed {
            get {
                return ResourceManager.GetString(ResourceNames.TokenNotConstructed, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'A Safewhere security token could not be issued.'.
        /// </summary>
        public static string TokenNotIssued {
            get {
                return ResourceManager.GetString(ResourceNames.TokenNotIssued, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'The base token does not have a principal.'.
        /// </summary>
        public static string TokenPrincipalMissing {
            get {
                return ResourceManager.GetString(ResourceNames.TokenPrincipalMissing, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Could not retrieve token for service: {0}.'.
        /// </summary>
        public static string TokenRetrieveError {
            get {
                return ResourceManager.GetString(ResourceNames.TokenRetrieveError, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'No type implementing the token named &apos;{0}&apos; could be found.'.
        /// </summary>
        public static string TokenTypeNotFound {
            get {
                return ResourceManager.GetString(ResourceNames.TokenTypeNotFound, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'No token version claim found in saml token'.
        /// </summary>
        public static string TokenVersionMissing {
            get {
                return ResourceManager.GetString(ResourceNames.TokenVersionMissing, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Encoding &quot;{0}&quot; is not supported.'.
        /// </summary>
        public static string UnknownEncoding {
            get {
                return ResourceManager.GetString(ResourceNames.UnknownEncoding, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Received an assertion from an untrusted identity provider.'.
        /// </summary>
        public static string UnknownIDP {
            get {
                return ResourceManager.GetString(ResourceNames.UnknownIDP, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Unable to determine the IDP that logged you in. You have been logged out of your local session.'.
        /// </summary>
        public static string UnknownLoginIDP {
            get {
                return ResourceManager.GetString(ResourceNames.UnknownLoginIDP, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Unable to process samlResponse. Unknown response type.'.
        /// </summary>
        public static string UnknownResponse {
            get {
                return ResourceManager.GetString(ResourceNames.UnknownResponse, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'RequestType &quot;{0}&quot; is not supported.'.
        /// </summary>
        public static string UnsupportedRequestType {
            get {
                return ResourceManager.GetString(ResourceNames.UnsupportedRequestType, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Token type {0} is not supported'.
        /// </summary>
        public static string UnsupportedTokenTypeReturned {
            get {
                return ResourceManager.GetString(ResourceNames.UnsupportedTokenTypeReturned, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Xml error: the {0} attribute is not supported on the {1}: {2} element in the SAML token.'.
        /// </summary>
        public static string UnsupportedXmlAttribute {
            get {
                return ResourceManager.GetString(ResourceNames.UnsupportedXmlAttribute, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'Xml error: the {0}: {1} child of the {2} element is not supported in the SAML token.'.
        /// </summary>
        public static string UnsupportedXmlElement {
            get {
                return ResourceManager.GetString(ResourceNames.UnsupportedXmlElement, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'The SAML token was signed by an untrusted certificate [{0}] by a security token service in a trusted realm: {1}'.
        /// </summary>
        public static string UntrustedCertificateForFederationSTS {
            get {
                return ResourceManager.GetString(ResourceNames.UntrustedCertificateForFederationSTS, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'The SAML token was signed by a security token service from an untrusted realm: {0}'.
        /// </summary>
        public static string UntrustedFederationSTS {
            get {
                return ResourceManager.GetString(ResourceNames.UntrustedFederationSTS, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'The SAML token was signed by an untrusted security token service'.
        /// </summary>
        public static string UntrustedSTS {
            get {
                return ResourceManager.GetString(ResourceNames.UntrustedSTS, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Looks up a localized string similar to 'The SAMLtoken cannot be automatically issued when using username/password authentication'.
        /// </summary>
        public static string UsernameAndPasswordMissing {
            get {
                return ResourceManager.GetString(ResourceNames.UsernameAndPasswordMissing, _resourceCulture);
            }
        }
        
        /// <summary>
        /// Formats a localized string similar to 'ACCESS DENIED: The value for a required authorization rule grant was missing or empty.  User={0}; Service={1}; Method={2}; CapabilityValue={3}; AzRule={4}; Argument={5}'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <param name="arg1">An object (1) to format.</param>
        /// <param name="arg2">An object (2) to format.</param>
        /// <param name="arg3">An object (3) to format.</param>
        /// <param name="arg4">An object (4) to format.</param>
        /// <param name="arg5">An object (5) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Design", "CA1025:ReplaceRepetitiveArgumentsWithParamsArray")]
        public static string AccessDeniedAzRuleGrantMissingFormat(object arg0, object arg1, object arg2, object arg3, object arg4, object arg5) {
            return string.Format(_resourceCulture, AccessDeniedAzRuleGrantMissing, arg0, arg1, arg2, arg3, arg4, arg5);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'ACCESS DENIED: Evaluation of an authorization rule returned &apos;false&apos;. User={0}; Service={1}; Method={2}; Capability/AzRule={3}'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <param name="arg1">An object (1) to format.</param>
        /// <param name="arg2">An object (2) to format.</param>
        /// <param name="arg3">An object (3) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Design", "CA1025:ReplaceRepetitiveArgumentsWithParamsArray")]
        public static string AccessDeniedAzRuleResultFalseFormat(object arg0, object arg1, object arg2, object arg3) {
            return string.Format(_resourceCulture, AccessDeniedAzRuleResultFalse, arg0, arg1, arg2, arg3);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'ACCESS DENIED: There are no required capabilities defined for the service {0} and default access for everyone is disallowed'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string AccessDeniedEveryoneAccessDisallowedFormat(object arg0) {
            return string.Format(_resourceCulture, AccessDeniedEveryoneAccessDisallowed, arg0);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'ACCESS DENIED: The caller does not have a required capability. User={0}; Service={1}; Method={2}; Capability={3}'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <param name="arg1">An object (1) to format.</param>
        /// <param name="arg2">An object (2) to format.</param>
        /// <param name="arg3">An object (3) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Design", "CA1025:ReplaceRepetitiveArgumentsWithParamsArray")]
        public static string AccessDeniedRequiredCapabilityMissingFormat(object arg0, object arg1, object arg2, object arg3) {
            return string.Format(_resourceCulture, AccessDeniedRequiredCapabilityMissing, arg0, arg1, arg2, arg3);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'ACCESS DENIED: Expected tokenversion {2} actual tokenversion {3}. 
        ///User={0}
        ///AppID={1}'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <param name="arg1">An object (1) to format.</param>
        /// <param name="arg2">An object (2) to format.</param>
        /// <param name="arg3">An object (3) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Design", "CA1025:ReplaceRepetitiveArgumentsWithParamsArray")]
        public static string AccessDeniedTokenVersionNotAllowedFormat(object arg0, object arg1, object arg2, object arg3) {
            return string.Format(_resourceCulture, AccessDeniedTokenVersionNotAllowed, arg0, arg1, arg2, arg3);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'AUDIT: Service method invoked. User={0}; Service={1}; Method={2}'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <param name="arg1">An object (1) to format.</param>
        /// <param name="arg2">An object (2) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string AccessGrantedFormat(object arg0, object arg1, object arg2) {
            return string.Format(_resourceCulture, AccessGranted, arg0, arg1, arg2);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'Saml assertion does not have the required assurance level. Assurance level was: {0} and configured minimum assurance level was: {1}.'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <param name="arg1">An object (1) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string AssuranceLevelTooLowFormat(object arg0, object arg1) {
            return string.Format(_resourceCulture, AssuranceLevelTooLow, arg0, arg1);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'Xml error: {0} attribute is required on {1}: {2} element.'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <param name="arg1">An object (1) to format.</param>
        /// <param name="arg2">An object (2) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string AttributeMissingFormat(object arg0, object arg1, object arg2) {
            return string.Format(_resourceCulture, AttributeMissing, arg0, arg1, arg2);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'Xml error: attribute value not specified for SAML attribute {0}: {1}.'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <param name="arg1">An object (1) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string AttributeXmlErrorFormat(object arg0, object arg1) {
            return string.Format(_resourceCulture, AttributeXmlError, arg0, arg1);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'Found more than one certificate matching {0}.'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string CertificateMoreThanOneFoundFormat(object arg0) {
            return string.Format(_resourceCulture, CertificateMoreThanOneFound, arg0);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'Certificate {0} was not found.'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string CertificateNotFoundFormat(object arg0) {
            return string.Format(_resourceCulture, CertificateNotFound, arg0);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'Configuration element {0} under configuration element {1} missing in config file'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <param name="arg1">An object (1) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string ConfigurationElementMissingFormat(object arg0, object arg1) {
            return string.Format(_resourceCulture, ConfigurationElementMissing, arg0, arg1);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'Configuration section {0} missing in config file'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string ConfigurationSectionMissingFormat(object arg0) {
            return string.Format(_resourceCulture, ConfigurationSectionMissing, arg0);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'Unable to create the policy cache directory. Ensure that the directory {0} exists and that the service account has full access to it'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string CreatePolicyCacheDirErrorFormat(object arg0) {
            return string.Format(_resourceCulture, CreatePolicyCacheDirError, arg0);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'Xml error: a SAML token must contain a {0}:{1} element as a child of {2}: {3}.'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <param name="arg1">An object (1) to format.</param>
        /// <param name="arg2">An object (2) to format.</param>
        /// <param name="arg3">An object (3) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Design", "CA1025:ReplaceRepetitiveArgumentsWithParamsArray")]
        public static string ElementMissingFormat(object arg0, object arg1, object arg2, object arg3) {
            return string.Format(_resourceCulture, ElementMissing, arg0, arg1, arg2, arg3);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'Xml error: the children of the {0}: {1} element are not in proper order.'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <param name="arg1">An object (1) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string ElementsOutOfOrderFormat(object arg0, object arg1) {
            return string.Format(_resourceCulture, ElementsOutOfOrder, arg0, arg1);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'IdP specified in LogoutRequest {0} does not match IdP stored in session {1}.'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <param name="arg1">An object (1) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string IdPMismatchBetweenRequestAndSessionFormat(object arg0, object arg1) {
            return string.Format(_resourceCulture, IdPMismatchBetweenRequestAndSession, arg0, arg1);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'The attribute &apos;{0}&apos; is missing, incorretly formatted, or contains an usupported value.'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string IllFormedConfigAttributeFormat(object arg0) {
            return string.Format(_resourceCulture, IllFormedConfigAttribute, arg0);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'The attribute &apos;{0}&apos; is missing, incorretly formatted, or contains an usupported value.'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string IllFormedConfigAttribute1Format(object arg0) {
            return string.Format(_resourceCulture, IllFormedConfigAttribute1, arg0);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'The input is not a valid {0} element because this attribute is unrecognized: {1}.'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <param name="arg1">An object (1) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string InvalidAttributeParentFormat(object arg0, object arg1) {
            return string.Format(_resourceCulture, InvalidAttributeParent, arg0, arg1);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'Type {0} does not derive from {1}'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <param name="arg1">An object (1) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string InvalidBaseTypeFormat(object arg0, object arg1) {
            return string.Format(_resourceCulture, InvalidBaseType, arg0, arg1);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'A child element was encountered in the following element and was not expected to be there:&lt;{0}&gt;.'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string InvalidChildElementFormat(object arg0) {
            return string.Format(_resourceCulture, InvalidChildElement, arg0);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'The input was not a valid {0} element because it contains more than one {1} child element.'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <param name="arg1">An object (1) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string InvalidElementChildsQuantityFormat(object arg0, object arg1) {
            return string.Format(_resourceCulture, InvalidElementChildsQuantity, arg0, arg1);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'Element must be of type: {0}: {1}.'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <param name="arg1">An object (1) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string InvalidElementTypeFormat(object arg0, object arg1) {
            return string.Format(_resourceCulture, InvalidElementType, arg0, arg1);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'Parameter &apos;{0}&apos; is not a SAML {1} element.'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <param name="arg1">An object (1) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string InvalidSamlElementFormat(object arg0, object arg1) {
            return string.Format(_resourceCulture, InvalidSamlElement, arg0, arg1);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'The securityToken argument was not of type {0}.'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string InvalidSecurityTokenTypeFormat(object arg0) {
            return string.Format(_resourceCulture, InvalidSecurityTokenType, arg0);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'The built-in SamlTokenServiceHandler can only handle requests for tokens with the following TokenType: {0}.'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string InvalidTokenTypeFormat(object arg0) {
            return string.Format(_resourceCulture, InvalidTokenType, arg0);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'The uri {0} is not an wellformed absolute uri'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string InvalidWellformedAbsoluteUriStringFormat(object arg0) {
            return string.Format(_resourceCulture, InvalidWellformedAbsoluteUriString, arg0);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'No issuer SPN is defined for assertion {0}'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string IssuerSPNMissingFormat(object arg0) {
            return string.Format(_resourceCulture, IssuerSPNMissing, arg0);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'The specified metadata directory &quot;{0}&quot; could not be located.'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string MetadataLocationNotFoundFormat(object arg0) {
            return string.Format(_resourceCulture, MetadataLocationNotFound, arg0);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'Metadata not found for idp endpoint with id {0}'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string MetadataNotFoundFormat(object arg0) {
            return string.Format(_resourceCulture, MetadataNotFound, arg0);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'Xml error: attribute {0} of element {1}: {2} must have a value.'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <param name="arg1">An object (1) to format.</param>
        /// <param name="arg2">An object (2) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string NoAttributeValuePresentFormat(object arg0, object arg1, object arg2) {
            return string.Format(_resourceCulture, NoAttributeValuePresent, arg0, arg1, arg2);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'Xml error: element {0}: {1} must have a value.'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <param name="arg1">An object (1) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string NoElementValuePresentFormat(object arg0, object arg1) {
            return string.Format(_resourceCulture, NoElementValuePresent, arg0, arg1);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'Xml error: a SAML token may contain no more then one {0}: {1} element as a child of {2}.'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <param name="arg1">An object (1) to format.</param>
        /// <param name="arg2">An object (2) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string NoMoreThanOneXmlElementFormat(object arg0, object arg1, object arg2) {
            return string.Format(_resourceCulture, NoMoreThanOneXmlElement, arg0, arg1, arg2);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'Unable to instantiate policy extension of type {0}.'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string PolicyExtensionInstanciateErrorFormat(object arg0) {
            return string.Format(_resourceCulture, PolicyExtensionInstanciateError, arg0);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'Policy extension with name &apos;{0}&apos; is not registered.'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string PolicyExtensionNotRegisteredFormat(object arg0) {
            return string.Format(_resourceCulture, PolicyExtensionNotRegistered, arg0);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'Authorization policy for the method could not be found. User={0}; Service={1}; Action={2}'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <param name="arg1">An object (1) to format.</param>
        /// <param name="arg2">An object (2) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string PolicyNotFoundFormat(object arg0, object arg1, object arg2) {
            return string.Format(_resourceCulture, PolicyNotFound, arg0, arg1, arg2);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'No authorization policy found for protected service {0} at token version {1}'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <param name="arg1">An object (1) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string PolicyNotFoundForServiceFormat(object arg0, object arg1) {
            return string.Format(_resourceCulture, PolicyNotFoundForService, arg0, arg1);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'The {0} configuration element&apos;s value must be positive. The value found was {1}.'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <param name="arg1">An object (1) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string PositiveValueFormat(object arg0, object arg1) {
            return string.Format(_resourceCulture, PositiveValue, arg0, arg1);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'The property {0} is readonly '.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string ReadOnlyPropertyFormat(object arg0) {
            return string.Format(_resourceCulture, ReadOnlyProperty, arg0);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'Created Service Input Filter for {0}'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string ServiceInputFilterCreatedFormat(object arg0) {
            return string.Format(_resourceCulture, ServiceInputFilterCreated, arg0);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'Xml error: the &lt;{0}&gt;&lt;{2}&gt; and the &lt;{1}&gt;&lt;{2}&gt; elements must be the same.'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <param name="arg1">An object (1) to format.</param>
        /// <param name="arg2">An object (2) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string SubjectXmlErrorFormat(object arg0, object arg1, object arg2) {
            return string.Format(_resourceCulture, SubjectXmlError, arg0, arg1, arg2);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'Could not retrieve token for service: {0}.'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string TokenRetrieveErrorFormat(object arg0) {
            return string.Format(_resourceCulture, TokenRetrieveError, arg0);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'No type implementing the token named &apos;{0}&apos; could be found.'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string TokenTypeNotFoundFormat(object arg0) {
            return string.Format(_resourceCulture, TokenTypeNotFound, arg0);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'Encoding &quot;{0}&quot; is not supported.'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string UnknownEncodingFormat(object arg0) {
            return string.Format(_resourceCulture, UnknownEncoding, arg0);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'RequestType &quot;{0}&quot; is not supported.'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string UnsupportedRequestTypeFormat(object arg0) {
            return string.Format(_resourceCulture, UnsupportedRequestType, arg0);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'Token type {0} is not supported'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string UnsupportedTokenTypeReturnedFormat(object arg0) {
            return string.Format(_resourceCulture, UnsupportedTokenTypeReturned, arg0);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'Xml error: the {0} attribute is not supported on the {1}: {2} element in the SAML token.'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <param name="arg1">An object (1) to format.</param>
        /// <param name="arg2">An object (2) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string UnsupportedXmlAttributeFormat(object arg0, object arg1, object arg2) {
            return string.Format(_resourceCulture, UnsupportedXmlAttribute, arg0, arg1, arg2);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'Xml error: the {0}: {1} child of the {2} element is not supported in the SAML token.'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <param name="arg1">An object (1) to format.</param>
        /// <param name="arg2">An object (2) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string UnsupportedXmlElementFormat(object arg0, object arg1, object arg2) {
            return string.Format(_resourceCulture, UnsupportedXmlElement, arg0, arg1, arg2);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'The SAML token was signed by an untrusted certificate [{0}] by a security token service in a trusted realm: {1}'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <param name="arg1">An object (1) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string UntrustedCertificateForFederationSTSFormat(object arg0, object arg1) {
            return string.Format(_resourceCulture, UntrustedCertificateForFederationSTS, arg0, arg1);
        }
        
        /// <summary>
        /// Formats a localized string similar to 'The SAML token was signed by a security token service from an untrusted realm: {0}'.
        /// </summary>
        /// <param name="arg0">An object (0) to format.</param>
        /// <returns>A copy of format string in which the format items have been replaced by the String equivalent of the corresponding instances of Object in arguments.</returns>
        public static string UntrustedFederationSTSFormat(object arg0) {
            return string.Format(_resourceCulture, UntrustedFederationSTS, arg0);
        }
        
        /// <summary>
        /// Lists all the resource names as constant string fields.
        /// </summary>
        public class ResourceNames {
            
            /// <summary>
            /// Stores the resource name 'AccessDenied'.
            /// </summary>
            public const string AccessDenied = "AccessDenied";
            
            /// <summary>
            /// Stores the resource name 'AccessDeniedAzRuleGrantMissing'.
            /// </summary>
            public const string AccessDeniedAzRuleGrantMissing = "AccessDeniedAzRuleGrantMissing";
            
            /// <summary>
            /// Stores the resource name 'AccessDeniedAzRuleResultFalse'.
            /// </summary>
            public const string AccessDeniedAzRuleResultFalse = "AccessDeniedAzRuleResultFalse";
            
            /// <summary>
            /// Stores the resource name 'AccessDeniedEveryoneAccessDisallowed'.
            /// </summary>
            public const string AccessDeniedEveryoneAccessDisallowed = "AccessDeniedEveryoneAccessDisallowed";
            
            /// <summary>
            /// Stores the resource name 'AccessDeniedRequiredCapabilityMissing'.
            /// </summary>
            public const string AccessDeniedRequiredCapabilityMissing = "AccessDeniedRequiredCapabilityMissing";
            
            /// <summary>
            /// Stores the resource name 'AccessDeniedTokenVersionNotAllowed'.
            /// </summary>
            public const string AccessDeniedTokenVersionNotAllowed = "AccessDeniedTokenVersionNotAllowed";
            
            /// <summary>
            /// Stores the resource name 'AccessGranted'.
            /// </summary>
            public const string AccessGranted = "AccessGranted";
            
            /// <summary>
            /// Stores the resource name 'AssertionExpired'.
            /// </summary>
            public const string AssertionExpired = "AssertionExpired";
            
            /// <summary>
            /// Stores the resource name 'AssertionIDAttributeMissing'.
            /// </summary>
            public const string AssertionIDAttributeMissing = "AssertionIDAttributeMissing";
            
            /// <summary>
            /// Stores the resource name 'AssuranceLevelTooLow'.
            /// </summary>
            public const string AssuranceLevelTooLow = "AssuranceLevelTooLow";
            
            /// <summary>
            /// Stores the resource name 'AttributeMissing'.
            /// </summary>
            public const string AttributeMissing = "AttributeMissing";
            
            /// <summary>
            /// Stores the resource name 'AttributeXmlError'.
            /// </summary>
            public const string AttributeXmlError = "AttributeXmlError";
            
            /// <summary>
            /// Stores the resource name 'AuthenticationInstantMissing'.
            /// </summary>
            public const string AuthenticationInstantMissing = "AuthenticationInstantMissing";
            
            /// <summary>
            /// Stores the resource name 'AuthenticationMethodMissing'.
            /// </summary>
            public const string AuthenticationMethodMissing = "AuthenticationMethodMissing";
            
            /// <summary>
            /// Stores the resource name 'BaseTokenNotSupported'.
            /// </summary>
            public const string BaseTokenNotSupported = "BaseTokenNotSupported";
            
            /// <summary>
            /// Stores the resource name 'BindingError'.
            /// </summary>
            public const string BindingError = "BindingError";
            
            /// <summary>
            /// Stores the resource name 'CertificateMoreThanOneFound'.
            /// </summary>
            public const string CertificateMoreThanOneFound = "CertificateMoreThanOneFound";
            
            /// <summary>
            /// Stores the resource name 'CertificateNotFound'.
            /// </summary>
            public const string CertificateNotFound = "CertificateNotFound";
            
            /// <summary>
            /// Stores the resource name 'ChooseDesc'.
            /// </summary>
            public const string ChooseDesc = "ChooseDesc";
            
            /// <summary>
            /// Stores the resource name 'ChooseIDP'.
            /// </summary>
            public const string ChooseIDP = "ChooseIDP";
            
            /// <summary>
            /// Stores the resource name 'ConditionsMissing'.
            /// </summary>
            public const string ConditionsMissing = "ConditionsMissing";
            
            /// <summary>
            /// Stores the resource name 'ConfigurationElementMissing'.
            /// </summary>
            public const string ConfigurationElementMissing = "ConfigurationElementMissing";
            
            /// <summary>
            /// Stores the resource name 'ConfigurationSectionError'.
            /// </summary>
            public const string ConfigurationSectionError = "ConfigurationSectionError";
            
            /// <summary>
            /// Stores the resource name 'ConfigurationSectionMissing'.
            /// </summary>
            public const string ConfigurationSectionMissing = "ConfigurationSectionMissing";
            
            /// <summary>
            /// Stores the resource name 'ConfigurationSectionNotInitialized'.
            /// </summary>
            public const string ConfigurationSectionNotInitialized = "ConfigurationSectionNotInitialized";
            
            /// <summary>
            /// Stores the resource name 'CreatePolicyCacheDirError'.
            /// </summary>
            public const string CreatePolicyCacheDirError = "CreatePolicyCacheDirError";
            
            /// <summary>
            /// Stores the resource name 'CustomAppliesToMissing'.
            /// </summary>
            public const string CustomAppliesToMissing = "CustomAppliesToMissing";
            
            /// <summary>
            /// Stores the resource name 'CustomAppliesToMissing1'.
            /// </summary>
            public const string CustomAppliesToMissing1 = "CustomAppliesToMissing1";
            
            /// <summary>
            /// Stores the resource name 'DataEncryptionTokenSupport'.
            /// </summary>
            public const string DataEncryptionTokenSupport = "DataEncryptionTokenSupport";
            
            /// <summary>
            /// Stores the resource name 'DefaultStyle'.
            /// </summary>
            public const string DefaultStyle = "DefaultStyle";
            
            /// <summary>
            /// Stores the resource name 'DuplicateEncryptedKeyToken'.
            /// </summary>
            public const string DuplicateEncryptedKeyToken = "DuplicateEncryptedKeyToken";
            
            /// <summary>
            /// Stores the resource name 'DuplicateSamlFederationToken'.
            /// </summary>
            public const string DuplicateSamlFederationToken = "DuplicateSamlFederationToken";
            
            /// <summary>
            /// Stores the resource name 'DuplicateSamlToken'.
            /// </summary>
            public const string DuplicateSamlToken = "DuplicateSamlToken";
            
            /// <summary>
            /// Stores the resource name 'ElementMissing'.
            /// </summary>
            public const string ElementMissing = "ElementMissing";
            
            /// <summary>
            /// Stores the resource name 'ElementsOutOfOrder'.
            /// </summary>
            public const string ElementsOutOfOrder = "ElementsOutOfOrder";
            
            /// <summary>
            /// Stores the resource name 'EncryptedKeyTokenMissing'.
            /// </summary>
            public const string EncryptedKeyTokenMissing = "EncryptedKeyTokenMissing";
            
            /// <summary>
            /// Stores the resource name 'EncryptionTokenForScopeMissing'.
            /// </summary>
            public const string EncryptionTokenForScopeMissing = "EncryptionTokenForScopeMissing";
            
            /// <summary>
            /// Stores the resource name 'Error'.
            /// </summary>
            public const string Error = "Error";
            
            /// <summary>
            /// Stores the resource name 'GenericError'.
            /// </summary>
            public const string GenericError = "GenericError";
            
            /// <summary>
            /// Stores the resource name 'IdPMismatchBetweenRequestAndSession'.
            /// </summary>
            public const string IdPMismatchBetweenRequestAndSession = "IdPMismatchBetweenRequestAndSession";
            
            /// <summary>
            /// Stores the resource name 'IllFormedConfigAttribute'.
            /// </summary>
            public const string IllFormedConfigAttribute = "IllFormedConfigAttribute";
            
            /// <summary>
            /// Stores the resource name 'IllFormedConfigAttribute1'.
            /// </summary>
            public const string IllFormedConfigAttribute1 = "IllFormedConfigAttribute1";
            
            /// <summary>
            /// Stores the resource name 'InvalidAttributeParent'.
            /// </summary>
            public const string InvalidAttributeParent = "InvalidAttributeParent";
            
            /// <summary>
            /// Stores the resource name 'InvalidAuthenticationInstant'.
            /// </summary>
            public const string InvalidAuthenticationInstant = "InvalidAuthenticationInstant";
            
            /// <summary>
            /// Stores the resource name 'InvalidBaseType'.
            /// </summary>
            public const string InvalidBaseType = "InvalidBaseType";
            
            /// <summary>
            /// Stores the resource name 'InvalidChildElement'.
            /// </summary>
            public const string InvalidChildElement = "InvalidChildElement";
            
            /// <summary>
            /// Stores the resource name 'InvalidElementChildsQuantity'.
            /// </summary>
            public const string InvalidElementChildsQuantity = "InvalidElementChildsQuantity";
            
            /// <summary>
            /// Stores the resource name 'InvalidElementType'.
            /// </summary>
            public const string InvalidElementType = "InvalidElementType";
            
            /// <summary>
            /// Stores the resource name 'InvalidIssuerUri'.
            /// </summary>
            public const string InvalidIssuerUri = "InvalidIssuerUri";
            
            /// <summary>
            /// Stores the resource name 'InvalidIssuerUri1'.
            /// </summary>
            public const string InvalidIssuerUri1 = "InvalidIssuerUri1";
            
            /// <summary>
            /// Stores the resource name 'InvalidNotBeforeValue'.
            /// </summary>
            public const string InvalidNotBeforeValue = "InvalidNotBeforeValue";
            
            /// <summary>
            /// Stores the resource name 'InvalidNotOnOrAfterValue'.
            /// </summary>
            public const string InvalidNotOnOrAfterValue = "InvalidNotOnOrAfterValue";
            
            /// <summary>
            /// Stores the resource name 'InvalidRequest'.
            /// </summary>
            public const string InvalidRequest = "InvalidRequest";
            
            /// <summary>
            /// Stores the resource name 'InvalidRequestSecurityTokenMessage'.
            /// </summary>
            public const string InvalidRequestSecurityTokenMessage = "InvalidRequestSecurityTokenMessage";
            
            /// <summary>
            /// Stores the resource name 'InvalidResponseSamlToken'.
            /// </summary>
            public const string InvalidResponseSamlToken = "InvalidResponseSamlToken";
            
            /// <summary>
            /// Stores the resource name 'InvalidResponseToken'.
            /// </summary>
            public const string InvalidResponseToken = "InvalidResponseToken";
            
            /// <summary>
            /// Stores the resource name 'InvalidResponseToken1'.
            /// </summary>
            public const string InvalidResponseToken1 = "InvalidResponseToken1";
            
            /// <summary>
            /// Stores the resource name 'InvalidSamlElement'.
            /// </summary>
            public const string InvalidSamlElement = "InvalidSamlElement";
            
            /// <summary>
            /// Stores the resource name 'InvalidSecurityTokenServiceAsyncResult'.
            /// </summary>
            public const string InvalidSecurityTokenServiceAsyncResult = "InvalidSecurityTokenServiceAsyncResult";
            
            /// <summary>
            /// Stores the resource name 'InvalidSecurityTokenServiceAsyncResult1'.
            /// </summary>
            public const string InvalidSecurityTokenServiceAsyncResult1 = "InvalidSecurityTokenServiceAsyncResult1";
            
            /// <summary>
            /// Stores the resource name 'InvalidSecurityTokenServiceAsyncResult2'.
            /// </summary>
            public const string InvalidSecurityTokenServiceAsyncResult2 = "InvalidSecurityTokenServiceAsyncResult2";
            
            /// <summary>
            /// Stores the resource name 'InvalidSecurityTokenType'.
            /// </summary>
            public const string InvalidSecurityTokenType = "InvalidSecurityTokenType";
            
            /// <summary>
            /// Stores the resource name 'InvalidTimespan'.
            /// </summary>
            public const string InvalidTimespan = "InvalidTimespan";
            
            /// <summary>
            /// Stores the resource name 'InvalidTokenCacheProperty'.
            /// </summary>
            public const string InvalidTokenCacheProperty = "InvalidTokenCacheProperty";
            
            /// <summary>
            /// Stores the resource name 'InvalidTokenType'.
            /// </summary>
            public const string InvalidTokenType = "InvalidTokenType";
            
            /// <summary>
            /// Stores the resource name 'InvalidWellformedAbsoluteUriString'.
            /// </summary>
            public const string InvalidWellformedAbsoluteUriString = "InvalidWellformedAbsoluteUriString";
            
            /// <summary>
            /// Stores the resource name 'IssuerMissing'.
            /// </summary>
            public const string IssuerMissing = "IssuerMissing";
            
            /// <summary>
            /// Stores the resource name 'IssuerPolicyMissing'.
            /// </summary>
            public const string IssuerPolicyMissing = "IssuerPolicyMissing";
            
            /// <summary>
            /// Stores the resource name 'IssuerPolicyMissing1'.
            /// </summary>
            public const string IssuerPolicyMissing1 = "IssuerPolicyMissing1";
            
            /// <summary>
            /// Stores the resource name 'IssuerSPNMissing'.
            /// </summary>
            public const string IssuerSPNMissing = "IssuerSPNMissing";
            
            /// <summary>
            /// Stores the resource name 'KerberosWebUserCannotBeImpersonated'.
            /// </summary>
            public const string KerberosWebUserCannotBeImpersonated = "KerberosWebUserCannotBeImpersonated";
            
            /// <summary>
            /// Stores the resource name 'MetadataLocationNotFound'.
            /// </summary>
            public const string MetadataLocationNotFound = "MetadataLocationNotFound";
            
            /// <summary>
            /// Stores the resource name 'MetadataNotFound'.
            /// </summary>
            public const string MetadataNotFound = "MetadataNotFound";
            
            /// <summary>
            /// Stores the resource name 'NoAttributeValuePresent'.
            /// </summary>
            public const string NoAttributeValuePresent = "NoAttributeValuePresent";
            
            /// <summary>
            /// Stores the resource name 'NoElementValuePresent'.
            /// </summary>
            public const string NoElementValuePresent = "NoElementValuePresent";
            
            /// <summary>
            /// Stores the resource name 'NoMoreThanOneXmlElement'.
            /// </summary>
            public const string NoMoreThanOneXmlElement = "NoMoreThanOneXmlElement";
            
            /// <summary>
            /// Stores the resource name 'OneTimeUseReplay'.
            /// </summary>
            public const string OneTimeUseReplay = "OneTimeUseReplay";
            
            /// <summary>
            /// Stores the resource name 'PolicyExtensionInstanciateError'.
            /// </summary>
            public const string PolicyExtensionInstanciateError = "PolicyExtensionInstanciateError";
            
            /// <summary>
            /// Stores the resource name 'PolicyExtensionNotRegistered'.
            /// </summary>
            public const string PolicyExtensionNotRegistered = "PolicyExtensionNotRegistered";
            
            /// <summary>
            /// Stores the resource name 'PolicyNotFound'.
            /// </summary>
            public const string PolicyNotFound = "PolicyNotFound";
            
            /// <summary>
            /// Stores the resource name 'PolicyNotFoundForService'.
            /// </summary>
            public const string PolicyNotFoundForService = "PolicyNotFoundForService";
            
            /// <summary>
            /// Stores the resource name 'PositiveValue'.
            /// </summary>
            public const string PositiveValue = "PositiveValue";
            
            /// <summary>
            /// Stores the resource name 'ProfKeyUnsupportedAlgorithm'.
            /// </summary>
            public const string ProfKeyUnsupportedAlgorithm = "ProfKeyUnsupportedAlgorithm";
            
            /// <summary>
            /// Stores the resource name 'ProfKeyUnsupportedAlgorithm1'.
            /// </summary>
            public const string ProfKeyUnsupportedAlgorithm1 = "ProfKeyUnsupportedAlgorithm1";
            
            /// <summary>
            /// Stores the resource name 'ProfKeyUnsupportedAlgorithm2'.
            /// </summary>
            public const string ProfKeyUnsupportedAlgorithm2 = "ProfKeyUnsupportedAlgorithm2";
            
            /// <summary>
            /// Stores the resource name 'ReadOnlyProperty'.
            /// </summary>
            public const string ReadOnlyProperty = "ReadOnlyProperty";
            
            /// <summary>
            /// Stores the resource name 'RequerimentsNotSatisfied'.
            /// </summary>
            public const string RequerimentsNotSatisfied = "RequerimentsNotSatisfied";
            
            /// <summary>
            /// Stores the resource name 'RequerimentsNotSatisfied1'.
            /// </summary>
            public const string RequerimentsNotSatisfied1 = "RequerimentsNotSatisfied1";
            
            /// <summary>
            /// Stores the resource name 'RequestEntropyInvalidLength'.
            /// </summary>
            public const string RequestEntropyInvalidLength = "RequestEntropyInvalidLength";
            
            /// <summary>
            /// Stores the resource name 'RequestEntropyInvalidLength1'.
            /// </summary>
            public const string RequestEntropyInvalidLength1 = "RequestEntropyInvalidLength1";
            
            /// <summary>
            /// Stores the resource name 'RequestEntropyInvalidLength2'.
            /// </summary>
            public const string RequestEntropyInvalidLength2 = "RequestEntropyInvalidLength2";
            
            /// <summary>
            /// Stores the resource name 'RequestSecurityTokenRetrieveError'.
            /// </summary>
            public const string RequestSecurityTokenRetrieveError = "RequestSecurityTokenRetrieveError";
            
            /// <summary>
            /// Stores the resource name 'RequestSecurityTokenRetrieveError1'.
            /// </summary>
            public const string RequestSecurityTokenRetrieveError1 = "RequestSecurityTokenRetrieveError1";
            
            /// <summary>
            /// Stores the resource name 'RequestSecurityTokenRetrieveError2'.
            /// </summary>
            public const string RequestSecurityTokenRetrieveError2 = "RequestSecurityTokenRetrieveError2";
            
            /// <summary>
            /// Stores the resource name 'RequestSoapContextRetrieveError'.
            /// </summary>
            public const string RequestSoapContextRetrieveError = "RequestSoapContextRetrieveError";
            
            /// <summary>
            /// Stores the resource name 'ResponseProfKeyMissing'.
            /// </summary>
            public const string ResponseProfKeyMissing = "ResponseProfKeyMissing";
            
            /// <summary>
            /// Stores the resource name 'ResponseProfKeyMissing1'.
            /// </summary>
            public const string ResponseProfKeyMissing1 = "ResponseProfKeyMissing1";
            
            /// <summary>
            /// Stores the resource name 'ResponseProfKeyMissing2'.
            /// </summary>
            public const string ResponseProfKeyMissing2 = "ResponseProfKeyMissing2";
            
            /// <summary>
            /// Stores the resource name 'SamlNameIdentifierInvalidFormat'.
            /// </summary>
            public const string SamlNameIdentifierInvalidFormat = "SamlNameIdentifierInvalidFormat";
            
            /// <summary>
            /// Stores the resource name 'SamlNameIdentifierInvalidValue'.
            /// </summary>
            public const string SamlNameIdentifierInvalidValue = "SamlNameIdentifierInvalidValue";
            
            /// <summary>
            /// Stores the resource name 'SamlSubjectKeyMissing'.
            /// </summary>
            public const string SamlSubjectKeyMissing = "SamlSubjectKeyMissing";
            
            /// <summary>
            /// Stores the resource name 'SamlSubjectMissingConfirmationMethod'.
            /// </summary>
            public const string SamlSubjectMissingConfirmationMethod = "SamlSubjectMissingConfirmationMethod";
            
            /// <summary>
            /// Stores the resource name 'SamlSubjectNameMissing'.
            /// </summary>
            public const string SamlSubjectNameMissing = "SamlSubjectNameMissing";
            
            /// <summary>
            /// Stores the resource name 'SamlTokenExpired'.
            /// </summary>
            public const string SamlTokenExpired = "SamlTokenExpired";
            
            /// <summary>
            /// Stores the resource name 'SamlTokenMissing'.
            /// </summary>
            public const string SamlTokenMissing = "SamlTokenMissing";
            
            /// <summary>
            /// Stores the resource name 'SamlTokenNotFound'.
            /// </summary>
            public const string SamlTokenNotFound = "SamlTokenNotFound";
            
            /// <summary>
            /// Stores the resource name 'SecurityHeadersMissing'.
            /// </summary>
            public const string SecurityHeadersMissing = "SecurityHeadersMissing";
            
            /// <summary>
            /// Stores the resource name 'ServerTokenMissing'.
            /// </summary>
            public const string ServerTokenMissing = "ServerTokenMissing";
            
            /// <summary>
            /// Stores the resource name 'ServiceInputFilterCreated'.
            /// </summary>
            public const string ServiceInputFilterCreated = "ServiceInputFilterCreated";
            
            /// <summary>
            /// Stores the resource name 'ServiceProviderNotSet'.
            /// </summary>
            public const string ServiceProviderNotSet = "ServiceProviderNotSet";
            
            /// <summary>
            /// Stores the resource name 'SignatureInvalid'.
            /// </summary>
            public const string SignatureInvalid = "SignatureInvalid";
            
            /// <summary>
            /// Stores the resource name 'SignatureNotPresent'.
            /// </summary>
            public const string SignatureNotPresent = "SignatureNotPresent";
            
            /// <summary>
            /// Stores the resource name 'SubjectMissing'.
            /// </summary>
            public const string SubjectMissing = "SubjectMissing";
            
            /// <summary>
            /// Stores the resource name 'SubjectXmlError'.
            /// </summary>
            public const string SubjectXmlError = "SubjectXmlError";
            
            /// <summary>
            /// Stores the resource name 'TokenIdentityMissing'.
            /// </summary>
            public const string TokenIdentityMissing = "TokenIdentityMissing";
            
            /// <summary>
            /// Stores the resource name 'TokenNotConstructed'.
            /// </summary>
            public const string TokenNotConstructed = "TokenNotConstructed";
            
            /// <summary>
            /// Stores the resource name 'TokenNotIssued'.
            /// </summary>
            public const string TokenNotIssued = "TokenNotIssued";
            
            /// <summary>
            /// Stores the resource name 'TokenPrincipalMissing'.
            /// </summary>
            public const string TokenPrincipalMissing = "TokenPrincipalMissing";
            
            /// <summary>
            /// Stores the resource name 'TokenRetrieveError'.
            /// </summary>
            public const string TokenRetrieveError = "TokenRetrieveError";
            
            /// <summary>
            /// Stores the resource name 'TokenTypeNotFound'.
            /// </summary>
            public const string TokenTypeNotFound = "TokenTypeNotFound";
            
            /// <summary>
            /// Stores the resource name 'TokenVersionMissing'.
            /// </summary>
            public const string TokenVersionMissing = "TokenVersionMissing";
            
            /// <summary>
            /// Stores the resource name 'UnknownEncoding'.
            /// </summary>
            public const string UnknownEncoding = "UnknownEncoding";
            
            /// <summary>
            /// Stores the resource name 'UnknownIDP'.
            /// </summary>
            public const string UnknownIDP = "UnknownIDP";
            
            /// <summary>
            /// Stores the resource name 'UnknownLoginIDP'.
            /// </summary>
            public const string UnknownLoginIDP = "UnknownLoginIDP";
            
            /// <summary>
            /// Stores the resource name 'UnknownResponse'.
            /// </summary>
            public const string UnknownResponse = "UnknownResponse";
            
            /// <summary>
            /// Stores the resource name 'UnsupportedRequestType'.
            /// </summary>
            public const string UnsupportedRequestType = "UnsupportedRequestType";
            
            /// <summary>
            /// Stores the resource name 'UnsupportedTokenTypeReturned'.
            /// </summary>
            public const string UnsupportedTokenTypeReturned = "UnsupportedTokenTypeReturned";
            
            /// <summary>
            /// Stores the resource name 'UnsupportedXmlAttribute'.
            /// </summary>
            public const string UnsupportedXmlAttribute = "UnsupportedXmlAttribute";
            
            /// <summary>
            /// Stores the resource name 'UnsupportedXmlElement'.
            /// </summary>
            public const string UnsupportedXmlElement = "UnsupportedXmlElement";
            
            /// <summary>
            /// Stores the resource name 'UntrustedCertificateForFederationSTS'.
            /// </summary>
            public const string UntrustedCertificateForFederationSTS = "UntrustedCertificateForFederationSTS";
            
            /// <summary>
            /// Stores the resource name 'UntrustedFederationSTS'.
            /// </summary>
            public const string UntrustedFederationSTS = "UntrustedFederationSTS";
            
            /// <summary>
            /// Stores the resource name 'UntrustedSTS'.
            /// </summary>
            public const string UntrustedSTS = "UntrustedSTS";
            
            /// <summary>
            /// Stores the resource name 'UsernameAndPasswordMissing'.
            /// </summary>
            public const string UsernameAndPasswordMissing = "UsernameAndPasswordMissing";
        }
    }
}
